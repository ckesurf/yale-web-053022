10:11:14 From Eten to Everyone:
	So the standard is basically just a updated dictionary
10:11:40 From Kyle Andruczk to Everyone:
	V8
10:12:19 From Eten to Everyone:
	Nope
10:12:20 From Pranik Chainani to Everyone:
	Waybackmachine!
10:12:25 From Dani Mekuriaw to Everyone:
	no
10:18:16 From Bill Feng to Everyone:
	explorer.exe index.html
10:18:20 From Bill Feng to Everyone:
	in bash
10:18:51 From Dani Mekuriaw to Everyone:
	right click on html file and open in live server
10:18:59 From Dani Mekuriaw to Everyone:
	for windows vs code
10:24:41 From Eten to Everyone:
	Is it like simple?
10:33:43 From Dani Mekuriaw to Everyone:
	Aren't strings made of characters? so how are they primitive?
10:34:09 From Dani Mekuriaw to Everyone:
	oh okay
10:34:19 From TJ Taek Jin Han to Everyone:
	Is string interpolation possible with quotations?
10:37:57 From Mohamed Mohamud to Everyone:
	is there a method that allows you to round up?
10:38:19 From Kyle Andruczk to Everyone:
	Ceiling?
10:50:04 From Michelle Rios to Everyone:
	RETURN TIME: 10:55
10:55:40 From Eten to Everyone:
	Just a quick note, so these languages are basically always changing like what we are learning right now is not fixed
10:55:53 From Eten to Everyone:
	Like there is an update every couple of years
10:57:03 From Joe Burks to Everyone:
	Yeah there are always updates. Generally they aren’t massive though. There won’t be major overhauls that make everything you are learning obsolete.
10:57:39 From Eten to Everyone:
	Thanks!
11:02:01 From Eten to Everyone:
	divide
11:02:06 From Kyle Andruczk to Everyone:
	Modulo!
11:02:21 From Kyle Andruczk to Everyone:
	C ptsd is paying off
11:02:49 From Paulos Thomas to Everyone:
	3 equal signs???
11:02:54 From Kyle Andruczk to Everyone:
	Why === instead of ==
11:02:55 From Eten to Everyone:
	Lol I saw that
11:03:07 From Eten to Everyone:
	I was like hmm
11:04:18 From Joe Burks to Everyone:
	=== is more precise. 2 == “2” but 2 does not === “2”
11:04:34 From Paulos Thomas to Everyone:
	Thanks
11:04:44 From Eten to Everyone:
	Wait im confused what does “2” mean
11:04:51 From Kyle Andruczk to Everyone:
	Oh so === verifies both content and data type?
11:05:00 From Joe Burks to Everyone:
	^^
11:05:05 From Eten to Everyone:
	Oh ok !
11:06:00 From Joe Burks to Everyone:
	It goes a little deeper than that. Generally you want to use === to check if things are equivalent to each other
11:07:59 From Paulos Thomas to Everyone:
	nothing being returned
11:08:15 From Dani Mekuriaw to Everyone:
	wait so it would still work fine if you called isItEven(arr, arr)?
11:09:16 From Paulos Thomas to Everyone:
	^ looks like it works but only uses the first argument
11:09:24 From Eten to Everyone:
	Couldn’t also use double double quotes for returning odd/even?
11:10:19 From TJ Taek Jin Han to Everyone:
	Is rspec written as javascript?
11:14:14 From Joe Burks to Everyone:
	Javascript happens (for now) in the browser so you will be able to see if it is working (or not working)
11:14:20 From Kyle Andruczk to Everyone:
	Wait so if JS objects are like ruby hashes, does JS have classes?
11:15:14 From Kyle Andruczk to Everyone:
	Pogo
11:18:01 From Kyle Andruczk to Everyone:
	Loosely type lang moment
11:18:34 From TJ Taek Jin Han to Everyone:
	Is it same in ruby or just js?
11:22:22 From Kyle Andruczk to Everyone:
	Oh god oh no recursion
11:23:42 From Kyle Andruczk to Everyone:
	So does the return Val of doubleIt just get passed in to for each as a parameter?
11:25:43 From Kyle Andruczk to Everyone:
	Sorry is for each a built-in JS fcn or is it custom?
11:26:00 From TJ Taek Jin Han to Everyone:
	Why do we need console.log (num*2) if we have doubleIt(num)?
11:26:32 From Dani Mekuriaw to Everyone:
	can an array have elements from multiple data types at the same time?
11:27:57 From Kyle Andruczk to Everyone:
	Could you have the fcn def of beef outside of the parameter and just call beef() inside of forEach?
11:28:38 From Eten to Everyone:
	Oh so some methods can’t called on specific data types
11:28:44 From Eten to Everyone:
	Foreach only works on arrays
11:32:07 From Pranik Chainani to Everyone:
	And these 3 params are specified by forEach
11:32:16 From Pranik Chainani to Everyone:
	Like other functions could have different number of attributes?
11:35:12 From Dani Mekuriaw to Everyone:
	a number
11:35:16 From Eten to Everyone:
	The array?
11:35:18 From Eten to Everyone:
	Of numbers
11:35:20 From Eten to Everyone:
	Wait no return
11:35:20 From Dani Mekuriaw to Everyone:
	undefined?
11:35:21 From Pranik Chainani to Everyone:
	void
11:35:22 From Kyle Andruczk to Everyone:
	Null
11:35:28 From Dani Mekuriaw to Everyone:
	what if we replace console.log with the "return" keyword?
11:35:45 From Pranik Chainani to Everyone:
	ah
11:35:45 From Dani Mekuriaw to Everyone:
	inside the forEach
11:37:22 From Eten to Everyone:
	But I thought you said it evaluates and retunrs
11:37:27 From Eten to Everyone:
	And that’s why it didn’t work
11:37:41 From Eten to Everyone:
	Ohh ok
11:37:57 From Eten to Everyone:
	Thanks!
11:38:21 From Kyle Andruczk to Everyone:
	Is it kinda like passing in a pointer to the fcn beef?
11:39:09 From Paulos Thomas to Everyone:
	If you make a change to arr2 on each iteration, will the ‘arr’ argument in the Callback Function be updated?
11:40:56 From Paulos Thomas to Everyone:
	^ never mind, it explains it in the MDN doc a little further down
11:41:52 From Dani Mekuriaw to Everyone:
	wait what if our first argument for greetMe was fnc() instead?
11:43:58 From Kyle Andruczk to Everyone:
	Could you refactor to console.log(fcn() + name)?
11:48:37 From Pranik Chainani to Everyone:
	:)
11:48:44 From Anh Dang to Everyone:
	thank you!
11:48:47 From Dani Mekuriaw to Everyone:
	thank you!!
